<?php

require "Cache/Graphics.php";

Function removeaccents($string){
	$string= strtr($string, "ÀÁÂÃÄÅàáâãäåÒÓÔÕÖØòóôõöøÈÉÊËèéêëÇçÌÍÎÏìíîïÙÚÛÜùúûüÿÑñ",
	"aaaaaaaaaaaaooooooooooooeeeeeeeecciiiiiiiiuuuuuuuuynn");
	return $string;
}

// initialize the cache
$cache = new Cache_Graphics();

//if label is not defined, set an error message
if (empty($_GET['label'])) $label = "no label";
else $label = $_GET['label'];

// if police size is not defined, set the default size
if(!isset($_GET['s'])) $s=20;
else $s = $_GET['s'];

// if police color is not defined, set the default color
if(!isset($_GET['FG'])) $FG="FFFFFF";
else $FG = $_GET['FG'];

// if background color is not defined, set the default color
if(!isset($_GET['BG'])) $BG="FF0000";
else $BG = $_GET['BG'];

$fontpath = dirname($_SERVER['SCRIPT_FILENAME']) . "/fonts";

// if font is not defined, set the default font
if(!isset($_GET['font'])) $font="Tgb_____.ttf";
else $BG = $_GET['font'];

// remove all accents using the above function
$label = removeaccents(urldecode($label));

// set all characters in capital
$label = strtoupper(stripcslashes($label));

// set a unique name for the caching system
$id = md5(serialize(array($s, $label, $FG,$BG)));

// start creating image
header('Content-type: image/png'); 

// if the image doesn't exist in cache, create it
if (!($img = $cache->getImage($id, 'png'))) {

		//print'<pre>';print_r($_SERVER);exit;
		// set image size array
    $size = imagettfbbox($s,0, $fontpath . "/" . $font,$label);
    $dx = abs($size[2]-$size[0]);
    $dy = abs($size[5]-$size[3]);
    
    // define a margin pad
    $xpad=16;
    $ypad=10;

		// create image
    $im = @ImageCreate ($dx+$xpad-1,$dy+$ypad-1);

		// define the background color
    $BGColor["red"]   = hexdec(substr($BG,0,2));
    $BGColor["green"] = hexdec(substr($BG,2,2));
    $BGColor["blue"]  = hexdec(substr($BG,4,2));

		// define the foreground color
    $FGColor["red"]   = hexdec(substr($FG,0,2));
    $FGColor["green"] = hexdec(substr($FG,2,2));
    $FGColor["blue"]  = hexdec(substr($FG,4,2));

		// allocate colors
    $blue  = ImageColorAllocate($im,$BGColor["red"],$BGColor["green"],$BGColor["blue"]);
    $black = ImageColorAllocate($im, 0,0,0);
    $white = ImageColorAllocate($im, $FGColor["red"],$FGColor["green"],$FGColor["blue"]);

    ImageTTFText($im, $s, 0, (int)($xpad/2), $dy+(int)($ypad/2)-1, $white, "$fontpath/Tgb_____.ttf", $label);

		// cache image
    $img =  $cache->cacheImage($id, $im, 'png');
} // end if no cache

   //$img =  $cache->getImage($id,'png');
   
	 // print the image	
   print $img;

?>
